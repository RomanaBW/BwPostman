---
- hosts: localhost
  connection: local
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: ensure log folder for test results exists
      become: true
      become_user: root
      file:
        path: "{{ test_log_path }}/joomla_logs"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: get failure files to delete
      find:
        paths: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/logs"
        pattern: "*"
      register: log_files_to_delete

    - name: delete old failure files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ log_files_to_delete.files }}"
      when: log_files_to_delete.matched != 0

    - name: ensure video folder for test results exists
      become: true
      become_user: root
      file:
        path: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/videos"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: Set project dir variable
      set_fact:
        bw_project_base_dir: "{{ project_base_dir }}"

    - name: Preset failure flag
      set_fact:
        failure_flag: false

    - name: create network and start all test containers (db, webserver, tester)
      include_role:
        name: romanabw.setup-complete-infrastructure
      vars:
        source: "{{ acceptance_source }}"
        target: "{{ acceptance_target }}"


- hosts: "{{ acceptance_source.web_container_name }}"
  connection: docker
  vars_files:
    - ../vars/tests.yml
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set db host name
      set_fact:
        db_host: "{{ acceptance_source.db_container_name }}"

    - name: copy joomla configuration in place
      template:
        src: "configuration.php.j2"
        dest: "{{ tester_web_root }}configuration.php"
        group: "{{ tester_www_user }}"
        owner: "{{ tester_www_group }}"

    - name: set webserver error log file
      lineinfile:
        path: "/etc/apache2/sites-available/{{ apache_host }}.nil.conf"
        regexp: '^    ErrorLog'
        line: "    ErrorLog {{ test_log_path }}/{{ apache_host }}-error.log"

    - name: set webserver access log file
      lineinfile:
        path: "/etc/apache2/sites-available/{{ apache_host }}.nil.conf"
        regexp: '^    CustomLog'
        line: "    CustomLog {{ test_log_path }}/{{ apache_host }}-access.log combined"

    - name: restart webserver
      command: "/etc/init.d/apache2 reload"


- hosts: "{{ acceptance_source.tester_container_name }}"
  connection: docker
  vars_files:
    - vars/tests.yml
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set ip of webserver
      set_fact:
        web_container_ip: "{{ hostvars['localhost']['web_container_ip'] }}"

    - name: Set db host name
      set_fact:
        db_host: "{{ acceptance_source.db_container_name }}"

    - name: remove AcceptanceTesterActions.php
      become: true
      become_user: root
      file:
        path: "/data/tests/_support/_generated/AcceptanceTesterActions.php"
        state: absent

    - name: Prepare manifest for codeception tests
      template:
        src: "codeception.yml.j2"
        dest: "/data/codeception.yml"

    - name: Prepare manifest for acceptance tests
      become: true
      become_user: root
      template:
        src: "acceptance.suite.yml.j2"
        dest: "/data/tests/acceptance.suite.yml"

    - name: Create test script
      template:
        src: "do-tests.sh.j2"
        dest: "/data/do-tests.sh"
        mode: 0775

#    - name: Do tests
#      shell: "/data/do-tests.sh"
#      args:
#        chdir: "/data/tests"
#
#    - name: Show IP of webserver
#      debug:
#        msg: "{{ web_container_ip }}"
#
#- hosts: localhost
#  connection: local
#  vars_files:
#    - vars/tester-image-vars.yml
#    - vars/tester-test-vars.yml
#
#  tasks:
#    - name: remove all test containers (db, webserver, tester) and network
#      include_role:
#        name: romanabw.remove-complete-infrastructure
#      vars:
#        source: "{{ acceptance_source }}"
#        target: "{{ acceptance_target }}"
