---
- hosts: workplace
  gather_facts: no
  vars_files:
    - vars/fast-test-vars.yml

  tasks:
    # Synchronize var files to repo before used by following playbook and tasks
    - name: Synchronize needed vars files to repo
      become: yes
      synchronize:
        src: "{{ test_project_base_dir }}/build/playbooks/"
        dest: "{{ repo_dir }}/build/playbooks"
        archive: yes
        partial: yes
        mode: pull
        rsync_opts:
          - "--update"
          - "--quiet"

- hosts: tester
  gather_facts: no
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: ensure log folder for webserver exists
      become: true
      become_user: root
      file:
        path: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/logs"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: Make the base image available locally
      docker_image:
        name: '{{ base_source.web_image_tag_source }}'
        source: pull

    - name: Create the container
      docker_container:
        image: '{{ base_source.web_image_tag_source }}'
        name: '{{ base_source.web_container_name }}'
        command: sleep infinity
        volumes:
          - "/repositories:/repositories"
        etc_hosts: >
          {
            "universe3.bet2.nil" : "192.168.2.100",
          }

    - block:
        - name: Update apt at container
          become: yes
          shell: "docker exec -t {{ base_source.web_container_name }} apt-get update"

        - name: Install python at container
          become: yes
          shell: "docker exec -t {{ base_source.web_container_name }} apt-get install sudo python3 python3-apt --no-install-recommends -y"

        - name: Update-alternatives python version 3 to default
          become: true
          shell: "docker exec -t {{ base_source.web_container_name }} update-alternatives --install /usr/bin/python python /usr/bin/python3 2"

      rescue:
        - name: Remove the container on error case
          docker_container:
            name: '{{ base_source.web_container_name }}'
            state: absent

        - name: break here on error case
          shell: "/bin/false"


- hosts: "{{ base_source.web_container_name }}"
  connection: docker
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - block:
        - name: Run the role enhance apache installation
          include_role:
            name: romanabw.enhance-apache-installation

        - name: Run the role configure apache
          include_role:
            name: romanabw.configure-apache

        - name: Run the role configure sendmail
          include_role:
            name: romanabw.configure-sendmail

      rescue:
        - name: Ensure that the playbook runs further to be able to cleanup
          debug:
            msg: "Error at docker container occurred"

- hosts: tester
  connection: local
  gather_facts: no
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - block:
        - name: Commit the container
          command: 'docker commit -a "{{ author }}" {{ base_source.web_container_name }} {{ private_docker_repo }}/{{ base_target.web_image_tag_target }}'

        - name: Push container image to private registry
          shell: "docker push {{ private_docker_repo }}/{{ base_target.web_image_tag_target }}"
      when: hostvars[base_source.web_container_name]['ansible_failed_result'] is not defined

    - name: Remove the container
      docker_container:
        name: '{{ base_source.web_container_name }}'
        state: absent
      failed_when: hostvars[base_source.web_container_name]['ansible_failed_result'] is defined

