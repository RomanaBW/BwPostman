---
- hosts: Arbeitsplatz
  connection: local
  gather_facts: no
  vars_files:
    - vars/fast-test-vars.yml

  tasks:
    # Synchronize var files to repo before used by following playbook and tasks
    - name: Synchronize needed vars files to repo
      become: yes
      synchronize:
        src: "{{ test_project_base_dir }}/build/playbooks/"
        dest: "{{ repo_dir }}/build/playbooks"
        delete: yes
        archive: yes
        partial: yes
        rsync_opts:
          - "--update"
          - "--quiet"

- hosts: tester
  gather_facts: no
  vars_files:
    - vars/container-basics.yml
    - vars/tester-test-vars.yml
    - vars/tester-image-vars.yml
  vars:
    ansible_remote_tmp: "/tmp"

  tasks:
    - name: Show name of bare source web container
      debug:
        msg: "{{ bare_source.web_container_name }}"

    - name: Show name of web target image container
      debug:
        msg: "{{ bare_target.web_image_tag_target }}"

    - name: Set variable for current joomla sub folder
      set_fact:
        sub_path: "ext_install_j{{ j_main_version }}"

    - name: Show Joomla files path
      debug:
        msg: "{{ joomla_base_folders[sub_path] }}"

    - name: Get Joomla installation package
      get_url:
        url: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: yes
      with_items: "{{ joomla_packages }}"

    - name: Make the base image available locally
      docker_image:
        name: '{{ private_docker_repo }}/{{ bare_source.web_image_tag_source }}'
        source: pull
        force_source: yes

    - name: ensure joomla sub folder exists
      become: true
      file:
        path: "{{ joomla_base_folders[sub_path] }}"
        state: directory
        mode: 0777
        owner: www-data
        group: users

    - name: Create the container
      docker_container:
        image: '{{ private_docker_repo }}/{{ bare_source.web_image_tag_source }}'
        name: '{{ bare_source.web_container_name }}'
        detach: yes
        volumes:
          - "{{ joomla_base_folders[sub_path] }}:{{ tester_web_root }}"
          - "/repositories:/repositories"

- hosts: "{{ bare_source.web_container_name }}"
  connection: docker

  vars_files:
    - vars/tester-test-vars.yml
    - vars/tester-image-vars.yml

  tasks:
    - name: copy Joomla files from origin to apache container
      include_role:
        name: romanabw.copy-joomla-files-to-apache-container

    - name: Set db host name
      set_fact:
        db_host: "{{ bare_source.db_container_name }}"

    - name: copy joomla configuration in place
      template:
        src: "configuration.php.j2"
        dest: "{{ tester_web_root }}configuration.php"
        owner: "{{ tester_www_user }}"
        group: "{{ tester_www_group }}"


- hosts: tester
  gather_facts: no
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  vars_files:
    - vars/tester-test-vars.yml
    - vars/tester-image-vars.yml

  tasks:
    - name: Commit the container
      command: 'docker commit -a "{{ author }}" {{ bare_source.web_container_name }} {{ private_docker_repo }}/{{ bare_target.web_image_tag_target }}'

    - name: Push container image to private registry
      shell: "docker push {{ private_docker_repo }}/{{ bare_target.web_image_tag_target }}"

    - name: Remove the container
      docker_container:
        name: '{{ bare_source.web_container_name }}'
        state: absent

    - name: Show playbook dir
      debug:
        msg: "{{ playbook_dir }}"

    - name: Replace table prefix at Joomla 4
      replace:
        path: "{{ playbook_dir }}/files/joomla4/{{ item }}"
        regexp: '`#__'
        replace: "`{{ tester_db_prefix }}"
      with_items:
        - "base.sql"
        - "supports.sql"
        - "extensions.sql"
