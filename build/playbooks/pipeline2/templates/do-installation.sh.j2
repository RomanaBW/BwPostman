#! /bin/bash
whoami

# delete old failure file
rm -f {{ codecept_failed_file }}

# delete old X-server lock file
rm -f /tmp/X45-lock

# export sudo user
export BW_TESTER_USER="jenkins"
export BWPM_VERSION_TO_TEST="${1}"
export ADDITIONAL_EXTENSIONS="{{ additional_extensions |join(' ') }}"

# start x-server
/usr/bin/Xvfb :{{ display }} -ac -screen 0 {{ screen_size }}x16 &
export DISPLAY=:{{ display }}

java -jar -Dwebdriver.chrome.driver=/opt/selenium/chromedriver-91.0.4472.19 -Dwebdriver.chrome.logfile={{ test_log_path }}/chromedriver.log -Dwebdriver.chrome.verboseLogging=true /opt/selenium/selenium-server-standalone.jar -port 4445 >{{ test_log_path }}/selenium.log 2>{{ test_log_path }}/selenium.log &

# Loop until selenium server is available
until $(curl --output /dev/null --silent --head --fail http://localhost:4445/wd/hub); do
    printf '.'
    sleep 1
done
printf '\n'

# Start recording
tmux new-session -d -s BwPostmanRecording1 "ffmpeg -y -f x11grab -draw_mouse 0 -video_size {{ screen_size }} -i :{{ display }}.0 -vcodec libx264 -r 12 {{ record_path }}/{{ test_suite }}.mp4 2>{{ test_log_path }}/ffmpeg.log"

# run tests
cd /data

codecept build

# initialize failed check variable
failed_check=0

{% set selected_suite = '' %}
{% for suite in test_suites if suite.name == test_suite %}
{% set selected_suite = suite.tests %}
{% for item in selected_suite %}
{% for selected_file in test_file if selected_file.suite == item %}
if [ ${failed_check} = 0 ]; then
  codecept run acceptance {{ selected_file.testsuite_file }} -vvv --xml xmlreports/report_{{ item }}.xml --html htmlreports/report_{{ item }}.html
fi
if [ -f {{ codecept_failed_file }} ]; then
  echo "Current test {{ item }} failed!"
  failed_check=1
fi
{% endfor %}
{% endfor %}
{% endfor %}

# Wait for browser to close
sleep 1

# Stop recording
tmux send-keys -t BwPostmanRecording1 q

# Ensure X-server lock file is removed
rm -f /tmp/X45-lock

exit ${failed_check}
