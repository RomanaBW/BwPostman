---
- hosts: workplace
  gather_facts: no
  vars_files:
    - vars/fast-test-vars.yml

  tasks:
    # Synchronize var files to repo before used by following playbook and tasks
    - name: Synchronize needed vars files to repo
      become: yes
      synchronize:
        src: "{{ test_project_base_dir }}/build/playbooks/"
        dest: "{{ repo_dir }}/build/playbooks"
        archive: yes
        partial: yes
        mode: pull
        rsync_opts:
          - "--update"
          - "--quiet"

- hosts: localhost
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  connection: local
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set test suite
      set_fact:
        test_suite: "ext_install"

    - name: Set variable for current joomla sub folder
      set_fact:
        sub_path: "{{ test_suite }}_j{{ j_main_version }}"

    - name: ensure joomla sub folder exists
      become: true
      file:
        path: "{{ joomla_base_folders[sub_path] }}"
        state: directory
        mode: 0777
        owner: www-data
        group: users

    - name: ensure log folder for test results exists
      become: true
      become_user: root
      file:
        path: "{{ test_log_path }}"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: get failure files to delete
      find:
        paths: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/logs"
        pattern: "*"
      register: log_files_to_delete

    - name: delete old failure files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ log_files_to_delete.files }}"
      when: log_files_to_delete.matched != 0

    - name: ensure video folder for test results exists
      become: true
      become_user: root
      file:
        path: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/videos"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: create network and start all test containers (db, webserver, tester)
      include_role:
        name: romanabw.setup-complete-infrastructure
      vars:
        source: "{{ required_source }}"
        target: "{{ required_target }}"
        webroot_path: "{{ joomla_base_folders[sub_path] }}"

    - name: add joomla_additional_files_folder
      become: yes
      file:
        path: "{{ joomla_additional_files_folder }}"
        state: directory
        mode: 0777

    - name: get JCE installation package
      include_role:
        name: romanabw.get-jce-package

    - name: get test mode plugin package
      include_role:
        name: romanabw.get-test-mode-plugin-package

- hosts: "{{ required_source.web_container_name }}"
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  connection: docker
  vars_files:
    - vars/tests.yml
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set test suite
      set_fact:
        test_suite: "ext_install"

    - name: Set db host name
      set_fact:
        db_host: "{{ required_source.db_container_name }}"

    - name: copy joomla configuration in place
      template:
        src: "configuration.php.j2"
        dest: "{{ tester_web_root }}configuration.php"
        owner: "{{ tester_www_user }}"
        group: "{{ tester_www_group }}"

    - name: create safe path for virtuemart
      file:
        path: "/var/www/vmfiles/{{ item }}"
        state: directory
        owner: "{{ tester_www_user }}"
        group: "{{ tester_www_group }}"
      with_items:
        - invoices
        - keys

    - name: set permissions for log folder
      become: yes
      file:
        path: "{{ tester_web_root }}administrator/logs"
        state: directory
        owner: "{{ tester_www_user }}"
        group: "{{ tester_www_group }}"
        mode: 0777


- hosts: "{{ required_source.tester_container_name }}"
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  connection: docker
  vars_files:
    - vars/tests.yml
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set ip of webserver
      set_fact:
        web_container_ip: "{{ hostvars['localhost']['web_container_ip'] }}"

    - name: Set test suite
      set_fact:
        test_suite: "ext_install"

    - name: Set db host name
      set_fact:
        db_host: "{{ required_source.db_container_name }}"

    - name: create tests folder
      become: true
      file:
        path: "{{ item }}"
        state: directory
        group: users
        owner: "1200"
        mode: 0777
      with_items:
        - /data
        - /data/tests

    - name: copy codeception files
      synchronize:
        src: "{{ test_files_source_local }}"
        dest: "/data/tests"
        delete: yes
        recursive: yes
        rsync_opts:
          - "--exclude=_output"

    - name: remove AcceptanceTesterActions.php
      file:
        path: "/data/tests/_support/_generated/AcceptanceTesterActions.php"
        state: absent

    - name: Prepare manifest for codeception tests
      template:
        src: "codeception.yml.j2"
        dest: "/data/codeception.yml"

    - name: Prepare manifest for acceptance tests
      template:
        src: "acceptance.suite.yml.j2"
        dest: "/data/tests/acceptance.suite.yml"

    - name: Create test script
      template:
        src: "do-installation.sh.j2"
        dest: "/data/do-installation.sh"
        mode: 0775

    - name: Do tests
      shell: "/data/do-installation.sh"
      args:
        chdir: "/data/tests"
      ignore_errors: yes

    - name: Show IP of webserver
      debug:
        msg: "{{ web_container_ip }}"


- hosts: "{{ required_source.db_container_name }}"
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  connection: docker
  vars_files:
    - vars/tests.yml
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: set base sql command
      set_fact:
        sql_base_cmd: "mysql -u {{ mariadb_user }} -p{{ mariadb_password }} {{ mariadb_database }}"

    - name: disable some top modules
      shell: "{{ sql_base_cmd }} < {{ joomla_additional_files_folder }}/disable-top-modules.sql"

    - name: enable JCE editor toggler
      shell: "{{ sql_base_cmd }} < {{ joomla_additional_files_folder }}/set-jce-toggle-param.sql"



- hosts: localhost
  pre_tasks:
    - include_vars: "vars/codecept_paths_J{{ j_master_version }}.yml"
  connection: local
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Set test suite
      set_fact:
        test_suite: "ext_install"

    - name: stop all test containers (db, webserver, tester)
      include_role:
        name: romanabw.push-complete-infrastructure
      vars:
        source: "{{ required_source }}"
        target: "{{ required_target }}"
        push_tester: false


    #@ToDo: These tasks needs to be done even if one of the previous tasks failed!
    - name: remove all test containers (db, webserver, tester) and network
      include_role:
        name: romanabw.remove-complete-infrastructure
      vars:
        source: "{{ required_source }}"
        target: "{{ required_target }}"
