---
# Attention: This playbook has to be run at the target machine, where the container runs!
# This playbook only works correctly at server. Other machines as host for this playbook don't get internet connection!
#
# This Dockerfile is used as template: https://github.com/SeleniumHQ/docker-selenium/blob/selenium-3/Base/Dockerfile


- hosts: localhost
  gather_facts: no

  vars_files:
    - /repositories/systemscripts/Ansible/general_vars/general_bw_vars.yml
    - /repositories/systemscripts/Ansible/general_vars/general_bw_ssl_vars.yml
    - vars/tester-container-vars.yml

  tasks:
    - name: Make the base image available locally
      docker_image:
        name: "opensuse/tumbleweed"
        source: pull
        force_source: yes

    - name: Create network
      docker_network:
        name: "{{ bw_web_network_name }}"
        ipam_config:
          - subnet: '192.168.1.0/24'
            gateway: '192.168.1.100'
            iprange: '192.168.1.0/24'
      ignore_errors: true

    - name: Create the container
      docker_container:
        image: "opensuse/tumbleweed"
        name: "{{ bw_tester_base }}"
        hostname: ""
        command: sleep infinity
        detach: yes
        shm_size: 2G
        stop_signal: SIGRTMIN+3
        volumes:
          - "/repositories:/repositories"
        networks:
          - name: "{{ bw_web_network_name }}"
            ipv4_address: "192.168.1.99"
#        etc_hosts: >
#          {
#            "universe3.bet2.nil" : "192.168.2.100",
#          }

    - name: Install mc, sudo, shadow and python at container
      shell: 'docker exec -t "{{ bw_tester_base }}" zypper --non-interactive in mc sudo shadow python3 python3-docker python3-Babel python3-Jinja2 python3-MarkupSafe python3-coverage python3-jmespath python3-passlib python3-ply python3-pycryptodome python3-pytz python3-simplejson'
      ignore_errors: true

- hosts: "{{ bw_tester_base }}"
  connection: docker
  gather_facts: no
  vars_files:
    - /repositories/systemscripts/Ansible/general_vars/general_bw_vars.yml
    - vars/tester-container-vars.yml

  tasks:
    - name: Add the packman repository
      zypper_repository:
        name: "Packman"
        repo: "http://packman.jacobs-university.de/suse/openSUSE_Tumbleweed/"
        state: present
        autorefresh: yes
        disable_gpg_check: yes
        auto_import_keys: yes
        runrefresh: yes
        priority: "98"
        overwrite_multiple: true
      ignore_errors: true

    - name: Install basic packages
      zypper:
        name: "{{ item }}"
        state: present
        disable_recommends: yes
      loop: "{{ tester_basic_packages }}"

    - name: Install java packages
      zypper:
        name: "{{ item }}"
        state: present
        disable_recommends: yes
      loop: "{{ tester_java_packages }}"
      ignore_errors: true

    - name: Install headless packages
      zypper:
        name: "{{ item }}"
        state: present
        disable_recommends: yes
      loop: "{{ tester_headless_packages }}"
      ignore_errors: true

    - name: Install php packages
      zypper:
        name: "{{ item }}"
        state: present
        disable_recommends: yes
      loop: "{{ tester_php_packages }}"

    - name: Install chromium packages
      zypper:
        name: "{{ item }}"
        state: present
        disable_recommends: yes
      loop: "{{ tester_chromium_packages }}"

    - name: create group seluser
      become: yes
      group:
        name: seluser
        state: present
        system: no
        gid: 1201

    - name: Add user seluser
      become: yes
      user:
        name: seluser
        uid: 1200
#        password: "{{ password }}"
        group: seluser
        state: present
        shell: /bin/bash
        system: no
        createhome: yes
        home: "/home/seluser"

    - name: Add user seluser to passwordless sudoers.
      become: yes
      lineinfile:
        dest: /etc/sudoers
        regexp: '^seluser '
        line: 'seluser ALL=(ALL) NOPASSWD: ALL'
        state: present
        validate: 'visudo -cf %s'
      ignore_errors: true

    - name: Copy Grid check script
      become: yes
      copy:
       src: files/selenium/check-grid.sh
       dest: /opt/bin
       mode: u+x,g+x,o+x

    - name: Copy entry point
      become: yes
      copy:
       src: files/selenium/entry_point.sh
       dest: /opt/bin
       mode: u+x,g+x,o+x

    - name: Copy supervisor configuration file
      become: yes
      copy:
       src: files/selenium/supervisord.conf
       dest: /etc

    - name: Selenium & relaxing permissions for OpenShift and other non-sudo environments
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        mode: 0777
      loop:
        - /opt/selenium
        - /var/run/supervisor
        - /var/log/supervisor

    - name: Selenium & relaxing permissions for OpenShift and other non-sudo environments
      become: yes
      file:
        path: /opt/selenium/config.json
        state: touch
        mode: 0777

    - name: Selenium & relaxing permissions for OpenShift and other non-sudo environments
      become: yes
      file:
        path: "{{ item }}"
        group: 0
        mode: g=u
      loop:
        - /opt/selenium
        - /home/seluser
        - /var/run/supervisor
        - /var/log/supervisor

- hosts: localhost

  vars_files:
    - /repositories/systemscripts/Ansible/general_vars/general_bw_vars.yml
    - vars/tester-container-vars.yml

  tasks:
    - name: Set entrypoint variable
      set_fact:
        entrypoint: 'CMD ["/opt/bin/entry_point.sh"]'

    - name: Stop container
      shell: "docker stop {{ bw_tester_base }}"

    - name: Commit the base tester container
      command: 'docker commit -a "{{ docker_author }}" -c "{{ entrypoint }}" {{ bw_tester_base }} {{ private_docker_repo }}/romana/{{ bw_tester_base }}_{{ ansible_date_time.date }}'

    - name: Push base tester container image to private registry
      shell: "docker push {{ private_docker_repo }}/romana/{{ bw_tester_base }}_{{ ansible_date_time.date }}"
