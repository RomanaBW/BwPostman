#!/bin/bash
whoami

echo "Test-Cat: {{ test_cat }}"
echo "Project: {{ project_name }}"

VIDEO_NAME=/tests/tests/_output/{{ project_name }}/videos/{{ test_cat }}.mp4
VIDEO_LOG=/tests/tests/_output/{{ project_name }}/videos/ffmpeg.log

DISPLAY=":{{ display }}"

# start x-server and webdriver for chromium
/usr/bin/Xvfb :{{ display }} -ac -screen 0 {{ screen_size }}x16 &
export DISPLAY=${DISPLAY}

echo "Video-Name: ${VIDEO_NAME}"
echo "Display: ${DISPLAY}"

# java -jar -Dwebdriver.chrome.driver=/usr/bin/chromedriver -Dwebdriver.chrome.logfile=/data/logs/chromedriver_log.txt -Dwebdriver.chrome.verboseLogging=true /opt/selenium/selenium-server-standalone.jar -port 4445 >/data/logs/selenium_log.txt 2>/data/logs/selenium_log.txt &
java -jar /opt/selenium/selenium-server.jar standalone --port 4445 >/data/logs/selenium.log 2>/selenium.log &

# Loop until selenium server is available
printf 'Waiting Selenium Server to load\n'
sleep 5

printf '\n'

# start video recording
echo 'start recording'
tmux new-session -d -s BwPostmanRecording1 "ffmpeg -y -f x11grab -draw_mouse 0 -video_size {{ screen_size }} -i :{{ display }}.0 -vcodec libx264 -r 12 ${VIDEO_NAME} 2>${VIDEO_LOG}"

# run tests
/data/{{ test_runner }}

# stop video recording
echo 'stop recording'
sleep 1
tmux send-keys -t BwPostmanRecording1 q
sleep 3
XVFB_PID="$(pgrep -f /usr/bin/Xvfb)"
echo "PID: ${XVFB_PID}"
kill "$(pgrep -f /usr/bin/Xvfb)"

#sleep 120
