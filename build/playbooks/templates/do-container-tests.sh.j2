#! /bin/bash

# delete old failure file
rm {{ codecept_failed_file }}

# export sudo user
export BW_TESTER_USER="jenkins"
export BWPM_VERSION_TO_TEST="${1}"

# start x-server
/usr/bin/Xvfb {{ display }} -ac -screen 0 {{ screen_size }}x16 &
export DISPLAY={{ display }}

java -jar -Dwebdriver.chrome.driver=/usr/lib64/chromium/chromedriver -Dwebdriver.chrome.logfile=/logs/others/chromedriver.log -Dwebdriver.chrome.verboseLogging=true /opt/selenium/selenium-server-standalone-3.5.3.jar -port 4445 >/logs/others/selenium.log 2>/logs/others/selenium.log &

# Loop until selenium server is available
until $(curl --output /dev/null --silent --head --fail http://localhost:4445/wd/hub); do
    printf '.'
    sleep 1
done
printf '\n'

# Start recording
tmux new-session -d -s BwPostmanRecording1 "ffmpeg -y -f x11grab -draw_mouse 0 -video_size {{ screen_size }} -i {{ display }}.0 -vcodec libx264 -r 12 /project_videos/{{ item.value.suite_name }}.mp4 2>/logs/others/ffmpeg.log"

# run tests
cd /data

/usr/local/bin/codecept build

# initialize failed check variable
failed_check=0

{% set selected_suite = '' %}
{% for suite in test_suites_container if suite.name == item.value.suite_name %}
{% set selected_suite = suite.tests %}
{% for item_inner in selected_suite %}
{% for selected_file in test_file_container if selected_file.suite == item_inner %}
if [ ${failed_check} = 0 ]; then
  /usr/local/bin/codecept run acceptance {{ selected_file.testsuite_file }} -vvv --xml xmlreports/report_{{ item_inner }}.xml --html htmlreports/report_{{ item_inner }}.html
fi
if [ -f {{ codecept_failed_file }} ]; then
  echo "Current test {{ item_inner }} failed!"
  failed_check=1
fi
{% endfor %}
{% endfor %}
{% endfor %}

# Wait for browser to close
sleep 1

# Stop recording
tmux send-keys -t BwPostmanRecording1 q

exit ${failed_check}
