pipeline {
    agent { label 'Tester' }

    stages {
        stage('Set variables for php 8 part') {
			steps {
				script {
					BWPM_VERSION = "4.2.0"

//					Stable
					JOOMLA_VERSION = "4.3.2"
//					RC
//					JOOMLA_VERSION = "4.3.0-rc3"

					PHP_VERSION = "8.1.12"

					GIT_MESSAGE = "not specified"

					PROJECT_NAME = "j${JOOMLA_VERSION}_bwpm${BWPM_VERSION}"
					VERSIONS_EXTRA_VAR_4 = "joomla_version=${JOOMLA_VERSION} bwpm_version=${BWPM_VERSION} php_selected_version=${PHP_VERSION}";
					DO_RECORD_SMOKE = "true";
					DO_RECORD_1 = "false";
					DO_RECORD_2 = "false";
					DO_RECORD_3 = "false";
					DO_RECORD_4 = "true";
					DO_RECORD_5 = "false";
					DO_RECORD_6 = "false";
					DO_RECORD_7 = "false";
				}
			}
        }

		stage('Create full package') {
			steps {
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/build_package.yml --extra-vars 'project_base_dir=${WORKSPACE} version_number=${BWPM_VERSION} build=${BUILD_NUMBER} mb4_support=true replace_vars=true'"
			}
		}

		stage('Run smoke tests with php 8') {
			steps {
//				echo "Dummy Smoke"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-smoke-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} do_record=${DO_RECORD_SMOKE} ${VERSIONS_EXTRA_VAR_4}'"
				sh "docker exec -t bwpm_enh_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/push-smoke-testers.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
			}
			post {
					always {
//					echo "Dummy Smoke ALWAYS"
					sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-smoke-tests.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
				}
				failure {
					bwpmAcceptFailureContainer ("Smoke", "${PROJECT_NAME}")
				}
			}
		}

		stage('Remove smoke tests container images php 8') {
			steps {
//				echo "Dummy Smoke Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/remove-smoke-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

		stage('Run acceptance Joomla 4 with php 8') {
			parallel {
				stage('4-1: Maintenance + Lists + P2') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept1_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-2: Details') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept2_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept2 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-3: P4') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept3_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept3 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-4: P1 + FUM + U2S + Mod Reg + Mod Over') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept4_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept4 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-5: P3 + FE') {
					steps {
//						echo "Dummy 5"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept5 do_record=${DO_RECORD_5} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept5_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 5 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept5 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_5", "${PROJECT_NAME}")
						}
					}
				}
			}
		}

		stage('Remove acceptance tests container images') {
			steps {
//				echo "Dummy Acceptance Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/remove-acceptance-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

        stage('Send success mail for php 8 part') {
			steps {
				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed smoke test and all acceptance tests for Joomla 4 and php 8 and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J4 php 8 build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
			}
        }

        stage('Set variables for php 7 part') {
			steps {
				script {
					PHP_VERSION = "7.4.26"
					VERSIONS_EXTRA_VAR_4 = "joomla_version=${JOOMLA_VERSION} bwpm_version=${BWPM_VERSION} php_selected_version=${PHP_VERSION}";
				}
			}
        }

		stage('Run smoke tests with php 7') {
			steps {
//				echo "Dummy Smoke"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-smoke-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} do_record=${DO_RECORD_SMOKE} ${VERSIONS_EXTRA_VAR_4}'"
				sh "docker exec -t bwpm_enh_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/push-smoke-testers.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
			}
			post {
					always {
//					echo "Dummy Smoke ALWAYS"
					sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-smoke-tests.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
				}
				failure {
					bwpmAcceptFailureContainer ("Smoke", "${PROJECT_NAME}")
				}
			}
		}

		stage('Remove smoke tests container images php7') {
			steps {
//				echo "Dummy Smoke Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/remove-smoke-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

		stage('Run acceptance Joomla 4 with php 7') {
			parallel {
				stage('4-1: Maintenance + Lists + P2') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept1_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-2: Details') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept2_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept2 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-3: P4') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept3_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept3 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-4: P1 + FUM + U2S + Mod Reg + Mod Over') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept4_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept4 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME}")
						}
					}
				}
				stage('4-5: P3 + FE') {
					steps {
//						echo "Dummy 5"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/run-acceptance-tests.yml --extra-vars 'test_suite=accept5 do_record=${DO_RECORD_5} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept5_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 5 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/stop-acceptance-tests.yml --extra-vars 'test_suite=accept5 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_5", "${PROJECT_NAME}")
						}
					}
				}
			}
		}

		stage('php 7: Remove acceptance container images after use') {
			steps {
//				echo "Dummy 5"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/pipeline2/inventory/hosts ${WORKSPACE}/build/playbooks/pipeline2/remove-acceptance-images.yml --extra-vars 'test_suite=accept5 ${VERSIONS_EXTRA_VAR_4}'"
			}
		}


		stage('Dev-Upload') {
			steps {
				dir("/repositories/artifacts/bwpostman4/data") {
					fileOperations([
						fileCopyOperation(
							excludes: '',
						flattenFiles: false,
						includes: "pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip",
						targetLocation: "${WORKSPACE}/tests")
				])
				}

				dir("/repositories/artifacts/bwpostman4/data") {
					fileOperations([
						fileCopyOperation(
							excludes: '',
						flattenFiles: false,
						includes: "CHANGELOG",
						targetLocation: "${WORKSPACE}/tests")
				])
				}

				script {
					GIT_MESSAGE = sh(returnStdout: true, script: "git log -n 1 --pretty=%B")
				}

				echo "tests/pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip"

				sshPublisher(
					publishers: [sshPublisherDesc(
					configName: 'Web Dev Webservice BwPostman',
					transfers: [sshTransfer(
					cleanRemote: false,
					excludes: '',
					execCommand: '',
					execTimeout: 120000,
					flatten: false,
					makeEmptyDirs: false,
					noDefaultExcludes: false,
					patternSeparator: '[, ]+',
					remoteDirectory: "dev/${"${BWPM_VERSION}"}.${currentBuild.number}",
					remoteDirectorySDF: false,
					removePrefix: 'tests',
					sourceFiles: "tests/CHANGELOG, tests/pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip"
			)],
				usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
			)]
			)

				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed smoke test and all acceptance tests for Joomla 4 and php 7 and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J4 php 7 build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
//				@ToDo: NUR WENN ICH GANZ SICHER BIN!!!!!!!!
//				to: 'webmaster@boldt-webservice.de, k.klostermann@t-online.de'
			}
		}

//		stage('Push to github') {
//			steps {
//				echo "Push to github"
//			}
//		}

	}
}

