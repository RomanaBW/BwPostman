---
- hosts: localhost
  connection: local
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: ensure log folder for webserver exists
      become: true
      become_user: root
      file:
        path: "{{ bw_artifacts_base }}/j{{ joomla_version }}_bwpm{{ bwpm_version }}/{{ test_suite }}/logs"
        state: directory
        mode: 0777
        owner: romana
        group: users

    - name: Make the base image available locally
      docker_image:
        name: '{{ base_source.web_image_tag_source }}'
        source: pull

    - name: Create the container
      docker_container:
        image: '{{ base_source.web_image_tag_source }}'
        name: '{{ base_source.web_container_name }}'
        command: sleep infinity
        volumes:
          - "/repositories:/repositories"
        etc_hosts: >
          {
            "universe3.bet2.nil" : "192.168.2.100",
          }

    - name: Update apt at container
      become: yes
      shell: "docker exec -t {{ base_source.web_container_name }} apt-get update"

    - name: Install python at container
      become: yes
      shell: "docker exec -t {{ base_source.web_container_name }} apt-get install sudo python-apt --no-install-recommends -y"

- hosts: "{{ base_source.web_container_name }}"
  connection: docker
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Run the role enhance apache installation
      include_role:
        name: romanabw.enhance-apache-installation

    - name: Run the role configure apache
      include_role:
        name: romanabw.configure-apache

    - name: Run the role configure sendmail
      include_role:
        name: romanabw.configure-sendmail

- hosts: localhost
  connection: local
  vars_files:
    - vars/tester-image-vars.yml
    - vars/tester-test-vars.yml

  tasks:
    - name: Commit the container
      command: 'docker commit -a "{{ author }}" {{ base_source.web_container_name }} {{ private_docker_repo }}/{{ base_target.web_image_tag_target }}'

    - name: Push container image to private registry
      shell: "docker push {{ private_docker_repo }}/{{ base_target.web_image_tag_target }}"

    - name: Remove the container
      docker_container:
        name: '{{ base_source.web_container_name }}'
        state: absent

