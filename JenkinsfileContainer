pipeline {
    agent any

	options {
		disableConcurrentBuilds()
	}

	parameters {
        string(name: "BWPM_VERSION", defaultValue: "212", description: "The new/next version number of the project.")
        string(name: "JOOMLA_VERSION", defaultValue: "391", description: "Version of Joomla to test against")
        string(name: "BW_ARTIFACTS_BASE", defaultValue: "/repositories/artifacts/bwpostman")
		string(name: "GIT_MESSAGE", defaultValue: "not specified")
    }

    stages {
        stage('Prepare source files and log folders') {
            steps {
				script {
					PROJECT_NAME = "j${params.JOOMLA_VERSION}_bwpm${params.BWPM_VERSION}"
				}

				echo 'Project Name: ${PROJECT_NAME}''
                echo 'Remove not needed files'
                echo 'ensure log folders are present'
                echo 'Message for check trigger 6'
            }
        }

		stage('Prepare infrastructure') {
			parallel {
				stage('build database container') {
					steps {
						sh "docker build -f ./build/docker/mysqldb/Dockerfile -t romana/mysql ./build/docker/mysqldb"
					}
				}
				stage('build webserver container') {
					steps {
						sh "docker build -f ./build/docker/apache/Dockerfile71 -t romana/apache_71 ./build/docker/apache"
					}
				}
				stage('build mailserver container') {
					steps {
						sh "docker build -f ./build/docker/os_base/Dockerfile -t romana/os_base ./build/docker/os_base"
						sh "docker build -f ./build/docker/os_postfix/Dockerfile -t romana/os-postfix ./build/docker/os_postfix"
					}
				}
			}
		}

		stage('Create docker compose file') {
			steps {
					echo 'Create docker compose file for infrastructure'
					sh "ansible-playbook ${WORKSPACE}/build/playbooks/create-infrastructure-runner.yml --extra-vars 'suite_set=Suite_1 workspace=${WORKSPACE}'"
			}
		}

		stage('Create infrastructure containers') {
			steps {
				echo 'Start initial infrastructure'
				sh "docker-compose -f build/docker/run-bwpm-1.yml -p ${PROJECT_NAME} up -d"
				echo 'Copy project files to webserver'
				echo 'Fill database'
				echo 'Stop initial infrastructure'
				echo 'build image from webserver'
				echo 'build image from database server'
			}
		}

		stage('smoke') {
			steps {
				echo 'Dummy '
				sh "docker-compose -f build/docker/run-bwpm-1.yml -p ${PROJECT_NAME} down"
				//				bwpmAccept ("${STAGE_NAME}", params.SMOKE_IP, params.VERSION_NUMBER, params.JOOMLA_VERSION)
			}
		}
	}
}
