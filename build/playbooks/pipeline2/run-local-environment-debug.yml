---
- hosts: localhost
  connection: local
  vars_files:
    - vars/fast-test-vars.yml
    - vars/tester-image-vars.yml

  tasks:
    - name: Import transmitted parameters
      set_fact:
        joomla_version: "{{ lookup('env','BW_TEST_JOOMLA_VERSION') | d('440', true) }}"
        bwpm_version: "{{ lookup('env','BW_TEST_BWPM_VERSION') | d('425', true) }}"
#        test_runner: "bwpm_test_runner.sh"

    - name: Show imported parameters
      debug:
        msg:
          - "Hostname: {{ ansible_hostname }}"
          - "BW_TEST_VM_VERSION: {{ vm_version }}"
          - "BW_TEST_JOOMLA_VERSION: {{ joomla_version }}"
          - "BW_TEST_BWPM_VERSION: {{ bwpm_version }}"
#          - "Test-Dir: {{ test_dir }}"
#          - "Test-Src-Dir: {{ test_src_dir }}"

    - name: Set project name
      set_fact:
        project_name: "debug-infrastructure"

    - name: Set network name
      set_fact:
        net_name: "{{ project_name }}"

    - name: Create infrastructure compose file
      template:
        src: "run-bwpm-debug.yml.j2"
        dest: "{{ container_dir }}/infrastructure/run-bwpm-debug.yml"

    - name: Show start infrastructure command
      debug:
        msg: "docker-compose -f {{ container_dir }}/infrastructure/run-bwpm-debug.yml -p {{ project_name }} up -d"

    - name: Start infrastructure
      command: "docker-compose -f {{ container_dir }}/infrastructure/run-bwpm-debug.yml -p {{ project_name }} up -d"

#    - name: Show synchronization command
#      debug:
#        msg: "{{ test_dir }}/job_scripts/bwpm_rsync_build.sh {{ src_dir }} {{ web_dir }}/{{ project_name }}/files"
#
#    - name: Synchronize files
#      command: "{{ test_dir }}/job_scripts/bwpm_rsync_build.sh {{ src_dir }} {{ web_dir }}/{{ project_name }}/files"
#
#    - name: Synchronize tests
#      command: "{{ test_dir }}/job_scripts/bwpm_tests_rsync_build.sh {{ test_project_base_dir }}/tests {{ src_dir }}/tests"
#
#    - name: Check for failure file
#      stat:
#        path: "{{ test_dir }}/_output/{{ project_name }}/failed"
#      register: failure_file
#
#    - name: Set rebase command
#      set_fact:
#         sql_command: "mysql -u {{ test_db_user }} -p{{ test_db_password }} -h {{ test_db_host_ip }} {{ test_db_dbname }} < {{ web_dir }}/{{ project_name }}/backups/{{ project_name }}.sql"
#
#    - name: Output rebase command
#      debug:
#         msg: "{{ sql_command }}"
#
#    - name: Pause before rebase to ensure database is up
#      pause:
#        seconds: 20
#      when: failure_file.stat.exists or rebase|bool
#
#    - name: Rebase database
#      shell: "{{ sql_command }}"
#      when: failure_file.stat.exists or rebase|bool
#
#    - name: Pause after rebase
#      pause:
#        seconds: 25
#      when: failure_file.stat.exists or rebase|bool
#
#    - name: Prepare manifest for codeception tests
#      template:
#        src: "codeception-fast.yml.j2"
#        dest: "{{ base_dir }}/codeception.yml"
#
#    - name: Prepare manifest for acceptance tests with chromium
#      template:
#        src: "acceptance-fast.suite.yml.j2"
#        dest: "{{ base_dir }}/{{ test_src_dir }}/acceptance.suite.yml"
#
#    - name: Create tester compose file
#      become: yes
#      template:
#        src: "bwpm-tester-fast.yml.j2"
#        dest: "{{ container_dir }}/testers/bwpm-tester-fast.yml"
#        mode: 0664
#        owner: romana
#        group: users
#
#    - name: Create tester start script
#      become: yes
#      template:
#        src: "bwpm_tester_start_fast.sh.j2"
#        dest: "{{ base_dir }}/{{ test_src_dir }}/job_scripts/bwpm_tester_start_fast.sh"
#        mode: 0775
#        owner: romana
#        group: users
