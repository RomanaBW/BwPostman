pipeline {
    agent { label 'Tester' }

    stages {
        stage('Set variables') {
			steps {
				script {
					BWPM_VERSION = "4.3.1"

					JOOMLA_VERSION_4 = "4.4.9"
					JOOMLA_VERSION_5 = "5.2.2"

					DO_J5_SMOKE  = 'true'
					DO_J5_ACCEPT = 'true'
					DO_J5_PERMS  = 'true'

					DO_J4_SMOKE  = 'true'
					DO_J4_ACCEPT = 'true'
					DO_J4_PERMS  = 'true'

					DO_DEV_UPLOAD = 'true'
					PACK_PACKAGE  = 'true'

					PHP_VERSION_4 = "7.4.0"
					PHP_VERSION_5 = "8.1.0"

					GIT_MESSAGE = "not specified"

					PROJECT_NAME_4 = "j${JOOMLA_VERSION_4}_bwpm${BWPM_VERSION}"
					PROJECT_NAME_5 = "j${JOOMLA_VERSION_5}_bwpm${BWPM_VERSION}"

					VERSIONS_EXTRA_VAR_4 = "joomla_version=${JOOMLA_VERSION_4} bwpm_version=${BWPM_VERSION} php_selected_version=${PHP_VERSION_4}";
					VERSIONS_EXTRA_VAR_5 = "joomla_version=${JOOMLA_VERSION_5} bwpm_version=${BWPM_VERSION} php_selected_version=${PHP_VERSION_5}";

					DO_RECORD_SMOKE = "true";
					DO_RECORD_1 = "false";
					DO_RECORD_2 = "false";
					DO_RECORD_3 = "false";
					DO_RECORD_4 = "true";
					DO_RECORD_5 = "false";
					DO_RECORD_6 = "false";
					DO_RECORD_7 = "false";
				}
			}
        }

		stage('Create full package') {
			when {
				expression {
					return PACK_PACKAGE == 'true'
				}
			}
			steps {
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/build_package.yml --extra-vars 'project_base_dir=${WORKSPACE} version_number=${BWPM_VERSION} build=${BUILD_NUMBER} mb4_support=true replace_vars=true'"
			}
		}


		stage('Run smoke tests with J5') {
			when {
				expression {
					return DO_J5_SMOKE == 'true'
				}
			}
			steps {
//				echo "Dummy Smoke"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-smoke-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} do_record=${DO_RECORD_SMOKE} ${VERSIONS_EXTRA_VAR_5}'"
				sh "docker exec -t bwpm_enh_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/push-smoke-testers.yml --extra-vars '${VERSIONS_EXTRA_VAR_5}'"
			}
			post {
					always {
//					echo "Dummy Smoke ALWAYS"
					sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-smoke-tests.yml --extra-vars '${VERSIONS_EXTRA_VAR_5}'"
				}
				failure {
					bwpmAcceptFailureContainer ("Smoke", "${PROJECT_NAME_5}")
				}
			}
		}

		stage('Remove smoke tests container images J5') {
			when {
				expression {
					return DO_J5_SMOKE == 'true'
				}
			}
			steps {
//				echo "Dummy Smoke Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-smoke-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_5}'"
            }
		}

		stage('Run acceptance Joomla 5') {
			when {
				expression {
					return DO_J5_ACCEPT == 'true'
				}
			}
			parallel {
				stage('A5-1: Lists NLS, TPLS, SUBS') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_accept1_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('A5-2: Details NL, SUB') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_accept2_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept2 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('A5-3: Details TPL, CAM, ML, Lists CAMS, MLS, Maintenance + Frontend') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_accept3_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept3 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('A5-4: Mod Reg, Mod Over, UA, FUM, U2S') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_accept4_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept4 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME_5}")
						}
					}
				}
			}
		}


		stage('Remove acceptance tests container images for J5') {
			when {
				expression {
					return DO_J5_ACCEPT == 'true'
				}
			}
			steps {
//				echo "Dummy Acceptance Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-acceptance-images.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept1 ${VERSIONS_EXTRA_VAR_5}'"
            }
		}

        stage('Send acceptance success mail for Joomla 5 part') {
			when {
				expression {
					return DO_J5_ACCEPT == 'true'
				}
			}
			steps {
				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed smoke test and all acceptance tests for Joomla ${JOOMLA_VERSION_5} and php ${PHP_VERSION_5} and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J${JOOMLA_VERSION_5} acceptance php ${PHP_VERSION_5} build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
			}
        }




		stage('Run smoke tests with J4') {
			when {
				expression {
					return DO_J4_SMOKE == 'true'
				}
			}
			steps {
//				echo "Dummy Smoke"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-smoke-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} do_record=${DO_RECORD_SMOKE} ${VERSIONS_EXTRA_VAR_4}'"
				sh "docker exec -t bwpm_enh_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/push-smoke-testers.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
			}
			post {
					always {
//					echo "Dummy Smoke ALWAYS"
					sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-smoke-tests.yml --extra-vars '${VERSIONS_EXTRA_VAR_4}'"
				}
				failure {
					bwpmAcceptFailureContainer ("Smoke", "${PROJECT_NAME_4}")
				}
			}
		}

		stage('Remove smoke tests container images J4') {
			when {
				expression {
					return DO_J4_SMOKE == 'true'
				}
			}
			steps {
//				echo "Dummy Smoke Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-smoke-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

		stage('Run acceptance Joomla 4') {
			when {
				expression {
					return DO_J4_ACCEPT == 'true'
				}
			}
			parallel {
				stage('A4-1: Lists NLS, TPLS, SUBS') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept1_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('A4-2: Details NL, SUB') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept2_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept2 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('A4-3: Details TPL, CAM, ML, Lists CAMS, MLS, Maintenance + Frontend') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept3_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept3 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('A4-4: Mod Reg, Mod Over, UA, FUM, U2S') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=accept4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_accept4_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=accept4 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME_4}")
						}
					}
				}
			}
		}

		stage('Remove acceptance tests container images for J4') {
			when {
				expression {
					return DO_J4_ACCEPT == 'true'
				}
			}
			steps {
//				echo "Dummy Acceptance Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-acceptance-images.yml --extra-vars 'test_suite=accept1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

        stage('Send acceptance success mail for Joomla 4 part') {
			when {
				expression {
					return DO_J4_ACCEPT == 'true'
				}
			}
			steps {
				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed smoke test and all acceptance tests for Joomla ${JOOMLA_VERSION_4} and php ${PHP_VERSION_4} and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J${JOOMLA_VERSION_4} acceptance php ${PHP_VERSION_4} build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
			}
        }



		stage('Dev-Upload') {
			when {
				expression {
					return DO_DEV_UPLOAD == 'true'
				}
			}
			steps {
				dir("/repositories/artifacts/bwpostman4/data") {
					fileOperations([
						fileCopyOperation(
							excludes: '',
						flattenFiles: false,
						includes: "pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip",
						targetLocation: "${WORKSPACE}/tests")
				])
				}

				dir("/repositories/artifacts/bwpostman4/data") {
					fileOperations([
						fileCopyOperation(
							excludes: '',
						flattenFiles: false,
						includes: "CHANGELOG",
						targetLocation: "${WORKSPACE}/tests")
				])
				}

				script {
					GIT_MESSAGE = sh(returnStdout: true, script: "git log -n 1 --pretty=%B")
				}

				echo "tests/pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip"

				sshPublisher(
					publishers: [sshPublisherDesc(
					configName: 'Web Dev Webservice BwPostman',
					transfers: [sshTransfer(
					cleanRemote: false,
					excludes: '',
					execCommand: '',
					execTimeout: 120000,
					flatten: false,
					makeEmptyDirs: false,
					noDefaultExcludes: false,
					patternSeparator: '[, ]+',
					remoteDirectory: "dev/${"${BWPM_VERSION}"}.${currentBuild.number}",
					remoteDirectorySDF: false,
					removePrefix: 'tests',
					sourceFiles: "tests/CHANGELOG, tests/pkg_bwpostman-${"${BWPM_VERSION}"}.${currentBuild.number}.zip"
			)],
				usePromotionTimestamp: false,
					useWorkspaceInPromotion: false,
					verbose: false
			)]
			)

//				emailext(
//					body: "<p>BwPostman build ${currentBuild.number} has passed smoke test and all acceptance tests for Joomla ${JOOMLA_VERSION_4} and php 7 and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
//					subject:"BwPostman J${JOOMLA_VERSION_4} php 7 build ${currentBuild.number} successful",
//					to: 'webmaster@boldt-webservice.de'
//				)
//				@ToDo: NUR WENN ICH GANZ SICHER BIN!!!!!!!!
//				to: 'webmaster@boldt-webservice.de, k.klostermann@t-online.de'
			}
		}


		stage('Run permissions Joomla 5') {
			when {
				expression {
					return DO_J5_PERMS == 'true'
				}
			}
			parallel {
				stage('P5-1: P1') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_rights1_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights1 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('P5-2: P2') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_rights2_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights2 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('P5-3: P3') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_rights3_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights3 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME_5}")
						}
					}
				}
				stage('P5-4: P4') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_5}'"
						sh "docker exec -t bwpm_rights4_tester-5 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights4 ${VERSIONS_EXTRA_VAR_5}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME_5}")
						}
					}
				}
			}
		}

		stage('Remove permissions tests container images for J5') {
			when {
				expression {
					return DO_J5_PERMS == 'true'
				}
			}
			steps {
//				echo "Dummy Permissions Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-acceptance-images.yml --extra-vars 'test_suite=rights1 ${VERSIONS_EXTRA_VAR_5}'"
            }
		}

        stage('Send permissions success mail for Joomla 5 part') {
			when {
				expression {
					return DO_J5_PERMS == 'true'
				}
			}
			steps {
				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed all permission tests for Joomla ${JOOMLA_VERSION_5} and php ${PHP_VERSION_5} and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J${JOOMLA_VERSION_5} permissions php ${PHP_VERSION_5} build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
			}
        }


		stage('Run permissions Joomla 4') {
			when {
				expression {
					return DO_J4_PERMS == 'true'
				}
			}
			parallel {
				stage('P4-1: P1') {
					steps {
//						echo "Dummy 1"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights1 do_record=${DO_RECORD_1} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_rights1_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 1 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights1 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_1", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('P4-2: P2') {
					steps {
//						echo "Dummy 2"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights2 do_record=${DO_RECORD_2} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_rights2_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 2 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights2 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_2", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('P4-3: P3') {
					steps {
//						echo "Dummy 3"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights3 do_record=${DO_RECORD_3} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_rights3_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 3 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights3 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_3", "${PROJECT_NAME_4}")
						}
					}
				}
				stage('P4-4: P4') {
					steps {
//						echo "Dummy 4"
						sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/run-acceptance-tests.yml --extra-vars 'project_base_dir=${WORKSPACE} test_suite=rights4 do_record=${DO_RECORD_4} ${VERSIONS_EXTRA_VAR_4}'"
						sh "docker exec -t bwpm_rights4_tester-4 /data/do-tests.sh ${BWPM_VERSION}"
					}
					post {
						always {
//							echo "Dummy 4 always"
							sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/stop-acceptance-tests.yml --extra-vars 'test_suite=rights4 ${VERSIONS_EXTRA_VAR_4}'"
						}
						failure {
							bwpmAcceptFailureContainer ("Suite_4", "${PROJECT_NAME_4}")
						}
					}
				}
			}
		}

		stage('Remove permissions tests container images for J4') {
			when {
				expression {
					return DO_J4_PERMS == 'true'
				}
			}
			steps {
//				echo "Dummy Permissions Remove"
				sh "ansible-playbook -i ${WORKSPACE}/build/playbooks/inventory/hosts ${WORKSPACE}/build/playbooks/remove-acceptance-images.yml --extra-vars 'test_suite=rights1 ${VERSIONS_EXTRA_VAR_4}'"
            }
		}

        stage('Send permissions success mail for Joomla 4 part') {
			when {
				expression {
					return DO_J4_PERMS == 'true'
				}
			}
			steps {
				emailext(
					body: "<p>BwPostman build ${currentBuild.number} has passed all permission tests for Joomla ${JOOMLA_VERSION_4} and php ${PHP_VERSION_4} and is uploaded to Boldt Webservice for manual testing purpose.</p><p>Last commit message: ${GIT_MESSAGE}</p>",
					subject:"BwPostman J${JOOMLA_VERSION_4} permissions php ${PHP_VERSION_4} build ${currentBuild.number} successful",
					to: 'webmaster@boldt-webservice.de'
				)
			}
        }


//		stage('Push to github') {
//			steps {
//				echo "Push to github"
//			}
//		}

	}
}

